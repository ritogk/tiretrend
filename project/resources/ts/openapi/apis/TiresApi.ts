/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Tire,
    TireFromJSON,
    TireToJSON,
} from '../models';

export interface TiresGetRequest {
    periodStart?: string;
    periodEnd?: string;
    maker?: string;
    type?: string;
}

/**
 * TiresApi - interface
 * 
 * @export
 * @interface TiresApiInterface
 */
export interface TiresApiInterface {
    /**
     * 詳細内容
     * @summary タイヤの一覧を取得します。
     * @param {string} [periodStart] 期間(開始) YYYY/MM/DD
     * @param {string} [periodEnd] 期間(終了) YYYY/MM/DD
     * @param {string} [maker] メーカー
     * @param {string} [type] タイプ
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TiresApiInterface
     */
    tiresGetRaw(requestParameters: TiresGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Tire>>>;

    /**
     * 詳細内容
     * タイヤの一覧を取得します。
     */
    tiresGet(requestParameters: TiresGetRequest, initOverrides?: RequestInit): Promise<Array<Tire>>;

}

/**
 * 
 */
export class TiresApi extends runtime.BaseAPI implements TiresApiInterface {

    /**
     * 詳細内容
     * タイヤの一覧を取得します。
     */
    async tiresGetRaw(requestParameters: TiresGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Tire>>> {
        const queryParameters: any = {};

        if (requestParameters.periodStart !== undefined) {
            queryParameters['periodStart'] = requestParameters.periodStart;
        }

        if (requestParameters.periodEnd !== undefined) {
            queryParameters['periodEnd'] = requestParameters.periodEnd;
        }

        if (requestParameters.maker !== undefined) {
            queryParameters['maker'] = requestParameters.maker;
        }

        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/tires`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TireFromJSON));
    }

    /**
     * 詳細内容
     * タイヤの一覧を取得します。
     */
    async tiresGet(requestParameters: TiresGetRequest, initOverrides?: RequestInit): Promise<Array<Tire>> {
        const response = await this.tiresGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
